name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev/* ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'
  AZURE_FUNCTIONAPP_NAME: 'mp-dev-functions'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './packages/backend'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    name: Lint and Test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Build packages
      run: npm run build

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    needs: lint-and-test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  deploy-infrastructure:
    runs-on: ubuntu-latest
    name: Deploy Infrastructure
    needs: [lint-and-test, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Bicep template
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./infrastructure/main.bicep
        parameters: |
          environment=dev
          postgresAdminLogin=${{ secrets.POSTGRES_ADMIN_LOGIN }}
          postgresAdminPassword=${{ secrets.POSTGRES_ADMIN_PASSWORD }}

  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend
    needs: deploy-infrastructure
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build backend
      run: npm run build --workspace=packages/backend

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Functions
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend
    needs: [lint-and-test, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build --workspace=packages/frontend
      env:
        VITE_API_BASE_URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: 'upload'
        app_location: './packages/frontend'
        output_location: 'dist'
